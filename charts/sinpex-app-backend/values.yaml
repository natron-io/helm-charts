## Global parameters
global:
  # -- Global Docker image registry, override the image parameters
  # ref: https://github.com/bitnami/charts/tree/master/bitnami/common#images
  imageRegistry: ""
  # -- Global Docker registry secret names as an array
  imagePullSecrets: []

# -- timezone to set as environment variable 'TZ' in each pod
timezone: "Europe/Zurich"


## Bitnami Common parameters
# ref: https://github.com/bitnami/charts/tree/master/bitnami/common

# -- String to partially override .fullname template (will maintain the release name)
nameOverride: ""
# -- String to fully override .fullname template
fullnameOverride: ""
# -- String to fully override common.names.namespace
namespaceOverride: ""
# -- Extra objects to deploy (value evaluated as a template)
extraDeploy: []
# -- Add labels to all the deployed resources
commonLabels: {}
# -- Add annotations to all the deployed resources
commonAnnotations: {}

##Â Api deployment parameters
api:
  # -- Number of Sinpex App-Backend API replicas to deploy
  replicaCount: 1
  # -- Additional labels for Sinpex App-Backend API pods
  podLabels: {}
  # -- Annotations for Sinpex App-Backend API pods
  podAnnotations: {}

  updateStrategy:
    # -- Deployment strategy type
    type: Recreate
    # -- Deployment rolling update configuration parameters
    # @default -- Not set due to type "Recreate"
    #rollingUpdate: {}

  # -- Affinity for pod assignment
  affinity: {}
  # -- Node labels for pod assignment
  nodeSelector: {}
  # -- Tolerations for pod assignment
  tolerations: []
  # -- Topology Spread Constraints for pod assignment
  topologySpreadConstraints: []
  # -- Sinpex App-Backend API pods' Security Context
  podSecurityContext:
    enabled: false
  # -- Extra init containers
  initContainers: []
  # -- Array to add extra volumes
  extraVolumes: []
  service:
    # -- set the port for the api service
    port: 80
    # -- set the type for the api service
    type: ClusterIP
    # -- set the annotations for the api service
    annotations: {}
    # -- set the labels for the api service
    labels: {}

  ## Api container parameters
  # -- Api containers' Security Context
  containerSecurityContext:
    enabled: true
    allowPrivilegeEscalation: false
  # -- Override default container command for Api container
  command: []
  # -- Override default container args for Api container
  args: []
  # -- Api containers' resource requests and limits
  resources: {}
  # -- Extra environment variables to be set on Api container
  extraEnvVars: []
  # -- Secret with extra environment variables for Api contianer
  extraEnvVarsSecret: ""
  # -- Array to add extra mount for the Api container
  extraVolumeMounts: []
  # -- LivenessProbe for Api container
  livenessProbe:
    enabled: false
  # -- ReadinessProbe for Api container
  readinessProbe:
    enabled: false
  # -- StartupProbe for Api container
  startupProbe:
    enabled: false
  image:
    # -- Image registry for Api container
    registry: registry.gitlab.com
    # -- Sinpex App-Backend API image repository
    repository: sinpex-cloud/clients/arcplace/app-backend
    # -- Sinpex App-Backend API image tag
    tag: v0.1.33
    # -- image digest in the way sha256:aa... for Api container (will override the tag)
    digest: ""
    # -- Sinpex App-Backend API image pull policy
    pullPolicy: IfNotPresent
    # -- Sinpex App-Backend API image pull secret
    pullSecrets: []

## Worker parameters
worker:
  # -- Number of Sinpex App-Backend Worker replicas to deploy
  replicaCount: 1
  # -- Additional labels for Sinpex App-Backend Worker pods
  podLabels: {}
  # -- Annotations for Sinpex App-Backend Worker pods
  podAnnotations: {}

  updateStrategy:
    # -- Deployment strategy type
    type: Recreate
    # -- Deployment rolling update configuration parameters
    # @default -- Not set due to type "Recreate"
    #rollingUpdate: {}

  # -- Affinity for pod assignment
  affinity: {}
  # -- Node labels for pod assignment
  nodeSelector: {}
  # -- Tolerations for pod assignment
  tolerations: []
  # -- Topology Spread Constraints for pod assignment
  topologySpreadConstraints: []
  # -- Sinpex App-Backend Worker pods' Security Context
  podSecurityContext:
    enabled: false
  # -- Extra init containers
  initContainers: []
  # -- Array to add extra volumes
  extraVolumes: []
  service:
    # -- set the port for the Worker service
    port: 80
    # -- set the type for the Worker service
    type: ClusterIP
    # -- set the annotations for the Worker service
    annotations: {}
    # -- set the labels for the Worker service
    labels: {}

  ## Worker container parameters
  # -- Worker containers' Security Context
  containerSecurityContext:
    enabled: true
    allowPrivilegeEscalation: false
  # -- Override default container command for Worker container
  command: []
  # -- Override default container args for Worker container
  args: []
  # -- Worker containers' resource requests and limits
  resources: {}
  # -- Extra environment variables to be set on Worker container
  extraEnvVars: []
  # -- Secret with extra environment variables for Worker contianer
  extraEnvVarsSecret: ""
  # -- Array to add extra mount for the Worker container
  extraVolumeMounts: []
  # -- LivenessProbe for Worker container
  livenessProbe:
    enabled: false
  # -- ReadinessProbe for Worker container
  readinessProbe:
    enabled: false
  # -- StartupProbe for Worker container
  startupProbe:
    enabled: false
  image:
    # -- Image registry for Worker container
    registry: registry.gitlab.com
    # -- Sinpex App-Backend Worker image repository
    repository: sinpex-cloud/clients/arcplace/app-backend
    # -- Sinpex App-Backend Worker image tag
    tag: v0.1.33
    # -- image digest in the way sha256:aa... for Worker container (will override the tag)
    digest: ""
    # -- Sinpex App-Backend Worker image pull policy
    pullPolicy: IfNotPresent
    # -- Sinpex App-Backend Worker image pull secret
    pullSecrets: []

service:
  api:
    # -- set the port for the Api service
    port: 80
    # -- set the type for the Api service
    type: ClusterIP
    # -- set the annotations for the Api service
    annotations: {}
    # -- set the labels for the Api service
    labels: {}
  ws:
    # -- set the port for the Websocket service
    port: 6001
    # -- set the type for the Websocket service
    type: ClusterIP
    # -- set the annotations for the Websocket service
    annotations: {}
    # -- set the labels for the Websocket service
    labels: {}

## ServiceAccount parameters
serviceAccount:
  # -- Enable creation of ServiceAccount for sinpex-app-backend pod
  create: true
  # -- The name of the ServiceAccount to use
  # @default -- If not set, name is generated using the `common.names.fullname` template
  name: ""
  # -- Auto-mount the service account token in the pod
  automountServiceAccountToken: false

## Ingress parameters
ingress:
  # -- Enable ingress creation
  enabled: false
  # -- Additional annotations for the Ingress resource
  annotations:
    ingress.kubernetes.io/force-ssl-redirect: "true"
  ingressClassName: nginx
  # -- Default host for the ingress resource
  hostname: example.com
  # -- Ingress path
  path: /
  # -- Ingress path type
  pathType: ImplementationSpecific
  # -- Create TLS Secret, named "domain-tls"
  tls: true

## PostgreSQL chart configuration
## ref: https://github.com/bitnami/charts/blob/master/bitnami/postgresql/values.yaml
postgresql:
  enabled: false