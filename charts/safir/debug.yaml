---
# Source: safir/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-safir
  namespace: "default"
  labels:
    app.kubernetes.io/name: safir
    helm.sh/chart: safir-0.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
automountServiceAccountToken: false
---
# Source: safir/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-safir
  namespace: "default"
  labels:
    app.kubernetes.io/name: safir
    helm.sh/chart: safir-0.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  resources:
    requests:
      storage: "1Gi"
  accessModes:
    - "ReadWriteOnce"
  storageClassName: ""
---
# Source: safir/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-safir
  namespace: "default"
  labels:
    app.kubernetes.io/name: safir
    helm.sh/chart: safir-0.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: ClusterIP
  ports:
    - name: web
      port: 8080
      targetPort: web
  selector:
    app.kubernetes.io/name: safir
    app.kubernetes.io/instance: release-name
---
# Source: safir/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-safir
  namespace: "default"
  labels:
    app.kubernetes.io/name: safir
    helm.sh/chart: safir-0.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: safir
      app.kubernetes.io/instance: release-name
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: safir
        helm.sh/chart: safir-0.0.2
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
      annotations:
    spec:
      automountServiceAccountToken: false
      serviceAccountName: release-name-safir
      initContainers:
      containers:
        - name: apache
          image: docker.io/httpd:latest
          imagePullPolicy: "Always"
          securityContext:
            allowPrivilegeEscalation: false
          ports:
            - containerPort: 80
              name: web
          volumeMounts:
            - name: www
              mountPath: /var/www/htdocs
          env:
            - name: TZ
              value: "Europe/Zurich"
            - name: SAFIR_DOMAIN
              value: "example.com"
            - name: TOMCAT_HOSTNAME
              value: "localhost"
            - name: TOMCAT_PORT
              value: "8049"
          envFrom:
        - name: tomcat
          image: docker.io/tomcat:latest
          imagePullPolicy: "Always"
          securityContext:
            allowPrivilegeEscalation: false
          ports:
            - containerPort: 8049
              name: ajp
          volumeMounts:
            - name: www
              mountPath: /var/www/htdocs
            - name: secret-store
              mountPath: "/mnt/secret-store"
              readOnly: true
          env:
            - name: TZ
              value: "Europe/Zurich"
            - name: SAFIR_DOMAIN
              value: "example.com"
            - name: SAFIR_ENVIRONMENT
              value: "test"
            - name: SAFIR_DB_CONNECTION
              value: "jdbc:postgresql://postgres:5432/dbname"
          envFrom:
      volumes:
        - name: www
          persistentVolumeClaim:
            claimName: release-name-safir
        - name: secret-store
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: release-name-safir
---
# Source: safir/templates/cronjob.yaml
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: "release-name-example-cronjob"
  labels:
    chart: "safir-0.0.2"
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: release-name
            cron: example-cronjob
        spec:
          containers:
          - image: "gcr.io/google-containers/hyperkube:v1.18.0"
            imagePullPolicy: IfNotPresent
            name: example-cronjob
            env:
            - name: FOO
              value: bar
            envFrom:
            - name: example-secret
              secretRef: null
            - configMapRef: null
              name: example-configmap
            command: [/bin/sh -c echo 'Hello World!']
          restartPolicy: OnFailure
  schedule: "*/5 * * * *"
  successfulJobsHistoryLimit: 1
---
# Source: safir/templates/secretproviderclass.yaml
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: release-name-safir
  namespace: "default"
  labels:
    app.kubernetes.io/name: safir
    helm.sh/chart: safir-0.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  provider: azure
  parameters:
    usePodIdentity: "false"
    useVMManagedIdentity: "true"
    userAssignedIdentityID: ""
    keyvaultName: ""
    cloudName: "AzurePublicCloud"
    objects: |
      array:
      []
    tenantId: ""
  secretObjects:
