{{- $jdbcString := .Values.safir.jdbcString }}
{{- $jdbcStringParts := split "://" $jdbcString }}
{{- $pgHost := (split ":" ($jdbcStringParts._1))._0 }}
{{- $pgPort := (split "/" (split ":" ($jdbcStringParts._1))._1)._0 }}
{{- $pgDatabase := (split "/" ($jdbcStringParts._1))._1 }}
{{- $safirDomain := .Values.safir.domain }}

{{- if .Values.cronjobs.databaseS3Backup.enabled -}}
apiVersion: {{ include "common.capabilities.cronjob.apiVersion" . }}
kind: CronJob
metadata:
  name: {{ printf "%s-database-s3-backup" (include "common.names.fullname" .) | trunc 63 | trimSuffix "-" }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  concurrencyPolicy: Forbid
  schedule: {{ .Values.cronjobs.databaseS3Backup.schedule | quote }}
  successfulJobsHistoryLimit: {{ .Values.cronjobs.databaseS3Backup.historyLimit }}
  jobTemplate:
    spec:
      template:
        metadata:
          labels: {{- include "common.labels.standard" . | nindent 12 }}
          {{- if .Values.cronjobs.databaseS3Backup.podAnnotations }}
          annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.cronjobs.databaseS3Backup.podAnnotations "context" $) | nindent 12 }}
          {{- end }}
        spec:
          {{- if .Values.global.imagePullSecrets }}
          imagePullSecrets: {{- include "common.tplvalues.render" (dict "value" .Values.global.imagePullSecrets "context" $) | nindent 12 }}
          {{- end }}
          restartPolicy: OnFailure
          {{- if .Values.podSecurityContext.enabled }}
          securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          containers:
          - image: "{{ .Values.cronjobs.databaseS3Backup.image.repository }}:{{ .Values.cronjobs.databaseS3Backup.image.tag }}"
            imagePullPolicy: {{ .Values.cronjobs.databaseS3Backup.image.imagePullPolicy }}
            name: database-s3-backup
            {{- if .Values.cronjobs.databaseS3Backup..command }}
            command: {{ .Values.cronjobs.databaseS3Backup..command }}
            {{- end }}
            {{- with .Values.cronjobs.databaseS3Backup.extraEnvVars }}
            env:
            - name: SAFIR_DOMAIN
              value: {{ $safirDomain | quote }}
            - name: PGHOST
              value: {{ $pgHost | quote }}
            - name: PGPORT
              value: {{ $pgPort | quote }}
            - name: PGDATABASE
              value: {{ $pgDatabase | quote }}
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: safir-deployment-tomcat
                  key: SAFIR_DB_USER
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: safir-deployment-tomcat
                  key: SAFIR_DB_PASSWORD
{{ toYaml . | indent 12 }}
            {{- end }}
            {{- with .Values.cronjobs.databaseS3Backup.resources }}
            resources:
{{ toYaml . | indent 14 }}
            {{- end }}
            {{- with .Values.cronjobs.databaseS3Backup.volumeMounts }}
            volumeMounts:
{{ toYaml . | indent 12 }}
            {{- end }}
          {{- with .Values.cronjobs.databaseS3Backup.volumes }}
          volumes:
{{ toYaml . | indent 12 }}
          {{- end }}
{{- end }}
